// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// mean_run
NumericVector mean_run(NumericVector x, int n);
RcppExport SEXP _runner_mean_run(SEXP xSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_run(x, n));
    return rcpp_result_gen;
END_RCPP
}
// streak_run
NumericVector streak_run(NumericVector vec, int k);
RcppExport SEXP _runner_streak_run(SEXP vecSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vec(vecSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(streak_run(vec, k));
    return rcpp_result_gen;
END_RCPP
}
// sum_run
NumericVector sum_run(NumericVector x, int n);
RcppExport SEXP _runner_sum_run(SEXP xSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(sum_run(x, n));
    return rcpp_result_gen;
END_RCPP
}
// whichmax_run
NumericVector whichmax_run(NumericVector vec);
RcppExport SEXP _runner_whichmax_run(SEXP vecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vec(vecSEXP);
    rcpp_result_gen = Rcpp::wrap(whichmax_run(vec));
    return rcpp_result_gen;
END_RCPP
}
// whichmin_run
NumericVector whichmin_run(NumericVector vec);
RcppExport SEXP _runner_whichmin_run(SEXP vecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vec(vecSEXP);
    rcpp_result_gen = Rcpp::wrap(whichmin_run(vec));
    return rcpp_result_gen;
END_RCPP
}
// whichtrue_run
NumericVector whichtrue_run(LogicalVector vec);
RcppExport SEXP _runner_whichtrue_run(SEXP vecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalVector >::type vec(vecSEXP);
    rcpp_result_gen = Rcpp::wrap(whichtrue_run(vec));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_runner_mean_run", (DL_FUNC) &_runner_mean_run, 2},
    {"_runner_streak_run", (DL_FUNC) &_runner_streak_run, 2},
    {"_runner_sum_run", (DL_FUNC) &_runner_sum_run, 2},
    {"_runner_whichmax_run", (DL_FUNC) &_runner_whichmax_run, 1},
    {"_runner_whichmin_run", (DL_FUNC) &_runner_whichmin_run, 1},
    {"_runner_whichtrue_run", (DL_FUNC) &_runner_whichtrue_run, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_runner(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
